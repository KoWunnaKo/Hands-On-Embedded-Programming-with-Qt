/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ThermostatInfo.xml -p ThermostatInfoInterface
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef THERMOSTATINFOINTERFACE_H
#define THERMOSTATINFOINTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.packt.bigproject.thermostat
 */
class ComPacktBigprojectThermostatInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.packt.bigproject.thermostat"; }

public:
    ComPacktBigprojectThermostatInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComPacktBigprojectThermostatInterface();

    Q_PROPERTY(bool coolingOn READ coolingOn)
    inline bool coolingOn() const
    { return qvariant_cast< bool >(property("coolingOn")); }

    Q_PROPERTY(double currentTemp READ currentTemp)
    inline double currentTemp() const
    { return qvariant_cast< double >(property("currentTemp")); }

    Q_PROPERTY(bool fanOn READ fanOn)
    inline bool fanOn() const
    { return qvariant_cast< bool >(property("fanOn")); }

    Q_PROPERTY(bool heatingOn READ heatingOn)
    inline bool heatingOn() const
    { return qvariant_cast< bool >(property("heatingOn")); }

    Q_PROPERTY(double maxTemp READ maxTemp)
    inline double maxTemp() const
    { return qvariant_cast< double >(property("maxTemp")); }

    Q_PROPERTY(double minTemp READ minTemp)
    inline double minTemp() const
    { return qvariant_cast< double >(property("minTemp")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> setMaxTemp(double maxTemp)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(maxTemp);
        return asyncCallWithArgumentList(QStringLiteral("setMaxTemp"), argumentList);
    }

    inline QDBusPendingReply<> setMinTemp(double minTemp)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(minTemp);
        return asyncCallWithArgumentList(QStringLiteral("setMinTemp"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void coolingOnChanged(bool val);
    void currentTempChanged(double val);
    void fanOnChanged(bool val);
    void heatingOnChanged(bool val);
    void maxTempChanged(double val);
    void minTempChanged(double val);
};

namespace com {
  namespace packt {
    namespace bigproject {
      typedef ::ComPacktBigprojectThermostatInterface thermostat;
    }
  }
}
#endif
